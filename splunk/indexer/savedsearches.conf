# [<search_name>]
# action.webhook.enable_allowlist = 0
# alert.suppress = 0
# alert.track = 1
# counttype = number of events
# cron_schedule = */15 * * * *
# dispatch.earliest_time = -24h@h (this means the run every 24 hours at the top of the 24th hour)
# dispatch.latest_time = now
# display.general.type = statistics
# display.page.search.tab = statistics
# enableSched = 1
# quantity = 0
# relation = greater than
# request.ui_dispatch_app = search
# request.ui_dispatch_view = search
# search = index=*\
# | table host\
# |table index

[Failed Logins - Windows]
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */15 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=service_auth source="WinEventLog:Security" EventCode=4625 \
| stats values(host) as hosts, count by Account_Name \
| where count > 3

[PS Activity]
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */15 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=service_auth EventCode=4104 ("PowerShell â€“Version" OR "-w hidden" OR "FromBase64String" OR "bypass -" OR "Invoke-") \
| stats values(host) as hosts, values(Path) as paths, values(Message) as outputs count by User

[Failed Logins Then Successful Login - Windows]
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */15 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=service_auth EventCode=4625 OR EventCode=4624 NOT ("DWM*" OR "LOCAL SERVICE" OR "NETWORK SERVICE" OR "UMFD-*") \
| eval fail=if(EventCode=4625, 1, 0) \
| eval success=if(EventCode=4624, 1, 0) \
| stats values(host) as hosts, sum(fail) as fails, sum(success) as successes by Account_Name \
| where fails > 6 and successes > 0

[SSH keys (Linux)]
action.webhook.enable_allowlist = 0
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */1 * * * *
dispatch.earliest_time = -4h@m
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = index=auth\
| search source="/home/*/.ssh*" \
| search host="$dd_global_host$"

[New Users/Groups (Linux)]
action.webhook.enable_allowlist = 0
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */1 * * * *
dispatch.earliest_time = -4h@m
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = index=auth source IN ("/var/log/secure" "/var/log/auth.log") \
| regex "new user|group"\
| rex "new (?<ENTITY>\w+): name=(?<NAME>\w+),"

[High Failed Logins - Linux]
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */15 * * * *
dispatch.earliest_time = -30m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index="auth" failed password \
| rex "Failed password for invalid user (?<fail_user>[^ ]+) from (?<ip>[^ ]+)" \
| rex "message repeated (?<num_fails>[^ ]+) times: \[ Failed password for (?<fail_user>[^ ]+) from (?<ip2>[^ ]+)" \
| eval ip=coalesce(ip, ip2) \
| stats values(host) as hosts, values(ip) as ip, sum(num_fails) as other_fails, count as fails by fail_user \
| eval other_fails=if(isnull(other_fails), 0, other_fails) \
| eval total_fails=fails+other_fails \
| where total_fails > 3 \
| table hosts, fail_user, ip, total_fails

[Windows malicious activity (Windows)]
action.webhook.enable_allowlist = 0
alert.digest_mode = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
description = mimikatz activity
enableSched = 1
quantity = 0
relation = greater than
search = index=windows | search sekurlsa OR logonpasswords

[Sysmon abnormal events (Windows)]
action.webhook.enable_allowlist = 0
alert.digest_mode = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */1 * * * *
description = Event ID 4: Sysmon service state changed\
Event ID 6: Driver loaded\
Event ID 9: RawAccessRead\
Event ID 16: ServiceConfigurationChange\
Event ID 19: WmiEvent (WmiEventFilter activity detected)\
Event ID 20: WmiEvent (WmiEventConsumer activity detected)\
Event ID 21: WmiEvent (WmiEventConsumerToFilter activity detected)\
Event ID 25: ProcessTampering (Process image change)\
Event ID 28: FileBlockShredding
enableSched = 1
quantity = 0
relation = greater than
search = index=windows\
| search sourcetype="WinEventLog:Microsoft-Windows-Sysmon/Operational" NOT *splunk* \
| rename EventType as WinEventType\
| rex mode=sed "s/(\n\w+): (.+)/\1^\2/g" \
| extract pairdelim="\n", kvdelim="^"\
| search EventID IN (4, 6, 9, 16, 19, 20, 21, 25, 28)

